<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="id_recipick">
	<update id="review_count" parameterType="string">
		update review
		set viewer = viewer+1
		where review_id = #{_parameter}
	</update>

	<!-- 강신영 -->
	<select id="selectAll" parameterType="writeDTO" resultType="writeDTO">
		select * from review
	</select>
	<select id="select_hash" parameterType="writeDTO" resultType="hashtagDTO">
		select hash_name from hashtag
		where  review_id = #{review_id} 
	</select>

	<insert id="insertWrite" parameterType="writeDTO">
	<selectKey keyProperty="review_id" resultType="int" order="BEFORE">
			select RI.nextval from dual
		</selectKey>
	
	
		insert into review(
			review_id,
			pic,
			review_text,
			review_date,
			VIEWER,
			UNAME,
			review_title
		)
		values(
			#{review_id},
			0,
			#{review_text},
			sysdate,
			0,
			'user',
			#{review_title}
		)
	</insert >
	
	<insert id="insertHash" parameterType="hashmap">
		insert into hashtag(
			hash_id,review_id,hash_name,tag_type
		)
		values(
			hash_id.nextval,
			#{review_id},
			#{hash_name},
			'review')
	</insert>
	
	<select id="selectData_review" parameterType="writeDTO" resultType="writeDTO">
	select review_title, review_text,review_id
	from review
	where  review_id = #{review_id}
	</select>


	<select id="selectReview" parameterType="writeDTO" resultType="writeDTO">
		select review_id, review_title, review_date, uname, viewer
		from review
		order by review_id desc
	</select>

	<update id="update_review" parameterType="writeDTO" >
	update review
		set review_title = #{review_title},
			review_text= #{review_text}
		where review_id=#{review_id}
	</update>
	
	<delete id="delete_review" parameterType="writeDTO">
		delete from review
		where review_id=#{review_id}
	</delete>
	
	<!-- 이정성 -->
	<insert id="insert_recipe" parameterType="recipeDTO">
		<selectKey keyProperty="recipe_id" resultType="int" order="BEFORE">
			select recipe_seq.nextval from dual
		</selectKey>
		insert into recipe(
						recipe_id,
						recipe_date,
						mainpic,
						maintext,
						viewer,
						uname,
						recipe_title
						)
					values(
						#{recipe_id},
						sysdate,
						#{mainpic},
						#{maintext},
						0,
						#{uname},
						#{recipe_title}
						)
	</insert>
	
	<insert id="insert_food" parameterType="hashmap">
		insert into food(
					food_id,
					food_name,
					food_value,
					recipe_id
					)
					values(
						food_id.nextval,
						#{food_name},
						#{food_value},
						#{recipe_id}
					)
					
	</insert>
	
	<insert id="insert_hashtag" parameterType="hashmap">
		insert into hashtag(
						hash_id,
						hash_name,
						tag_type,
						recipe_id
					)
					values(
						hash_id.nextval,
						#{hash_name},
						'recipe',
						#{recipe_id}
					)
	</insert>
	
	<insert id="insert_detailrecipe" parameterType="hashmap">
		insert into detailrecipe(
							detailrecipe_id,
							detail_pic,
							detail_text,
							make_order,
							recipe_id
						)
						values(
							detailrecipe_id.nextval,
							#{detail_pic},
							#{detail_text},
							#{make_order},
							#{recipe_id}
						)
	</insert>
	
	<select id="bulletin_rec_sel" resultType="recipeDTO" parameterType="recipeDTO">
		select recipe_id, mainpic, recipe_title, recipe_date, uname, viewer from recipe
	</select>
	
	<select id="update_reci" parameterType="recipeDTO" resultType="recipeDTO">
		select * from recipe
		where recipe_id = ${recipe_id}
	</select>
	
	<select id="update_hash" parameterType="recipeDTO" resultType="hashtagDTO">
		select * from hashtag
		where recipe_id = ${recipe_id}
	</select>
	
	<select id="update_detail" parameterType="recipeDTO" resultType="detailrecipeDTO">
		select * from detailrecipe
		where recipe_id = ${recipe_id}
	</select>
	
	<select id="update_food" parameterType="recipeDTO" resultType="foodDTO">
		select * from food
		where recipe_id = ${recipe_id}
	</select>
<!-- 	<select id="recipe" parameterType="recipeDTO" resultType="recipeDTO"> -->
<!-- 		SELECT * FROM RECIPE -->
<!-- 	</select> -->

<!-- 	<insert id="recommend" parameterType="recipeDTO"> -->
<!-- 		insert into recommend( -->
<!-- 							recom_id, -->
<!-- 							uname, -->
<!-- 							recipe_id -->
<!-- 						) -->
<!-- 						values( -->
<!-- 							recom_id.nextval, -->
<!-- 							#{uname}, -->
<!-- 							#{recipe_id} -->
<!-- 						)	 -->
<!-- 	</insert> -->
	
	
<!-- 	<insert id="ggim" parameterType="recipeDTO"> -->
<!-- 		insert into ggim( -->
<!-- 						ggim_id, -->
<!-- 						uname, -->
<!-- 						recipe_id -->
<!-- 					) -->
<!-- 					values( -->
<!-- 						ggim_id.nextval, -->
<!-- 						#{uname{, -->
<!-- 						#{recipe_id} -->
<!-- 					) -->
<!-- 	</insert> -->
	
<!-- 	김호연 -->
	<insert id="newsigninsert" parameterType="memberDTO">
			insert into MEMBER (
				uname, 
				rname, 
				email, 
				pw, 
				birth, 
				phone, 
				gender,
				guest
			) values (
				#{uname}, 
				#{rname}, 
				#{email}, 
				#{pw},  
				to_date(#{birth}, 'yyyy-mm-dd'),
				#{phone}, 
				#{gender},
				#{guest}
			)
		</insert>
	
		<select id="loginselect" resultType="memberDTO">
			select 
				*
			from 
				MEMBER 
			where 
				uname = #{uname} and pw = #{pw}
		</select>
		
		<select id="isDuplicateUname" resultType="memberDTO">
			select 
				uname
			from 
				MEMBER 
			where 
				uname = #{uname}
		</select>
		
		<update id="updateMypage" parameterType="memberDTO">
			update
				member
			set
				rname = #{rname},
				email = #{email},
				pw = #{pw},
				birth = #{birth},
				phone = #{phone},
				gender = #{gender}
			where
				uname = #{uname}
		</update>
		
		<delete id="memberout" parameterType="memberDTO">
			delete
			from 
				member
			where
				uname = #{uname}
		</delete>
		
		
<!-- 		나의 게시물       -->
		<select id="myrecipeselect" resultType="recipeDTO">
			select 
				*
			from 
				recipe 
			where 
				uname = #{uname}
		</select>
		
		
		
<!-- 페이징 -->
		<select id="mylistpage" parameterType="recipeDTO" resultType="recipeDTO">
			select *
			from (
			    select rownum as rnum, tmp.*
			    from (
			        SELECT recipe.* 
			        FROM recipe 
			        order by recipe_date desc
			    ) tmp
			)
		    where rnum <![CDATA[ >= ]]> #{startNum} and rnum <![CDATA[ <= ]]> #{endNum}
		</select>
		
		<select id="mylistpagetotal" resultType="int">
			select count(*) from recipe
		</select>
		
<!-- 		<select id="selectMember" resultType="memberDTO"> -->
<!-- 			select * from MEMBER -->
<!-- 		</select> -->
</mapper>